.flex {
  display: flex;
}
.item {
  background-color: #12c0dd;
  font-size: 2em;
  padding: 1em;
  margin: 5px;
  text-align:center;
  /*flex-basis: 300px; ширина всех дочерних блоков с данным классом.*/
  /*flex-basis: 20%; можно задавать в процентах, это идельно для адаптивности сайта*/
  /*flex-basis: content; занимает именно ту ширину, которую занимает контент*/
   /*flex-grow: 1;автоматически происходит подгон всех элементров, 1 говорит что бы все поместились во всю ширину экрана. По умолчанию значение 0.*/
   /*Противоположность grow, по умолчанию 1, */
}
.item:nth-child(3) { /* можно сделать дополнительный класс*/
	flex-basis: 30%;
}
.item:nth-child(4) {
	flex-grow: 1;/*произошел подгон только 4 элемента на всю свободную ширину*/
}
.item:nth-child(3) {
	flex-shrink: 0;/*упирается на сжатие по сравнению с остальными, уменьшается в соотвествие с коэффициэнтом, расчет идет из пропорции который вычисляется математически. По умолчанию 1*/
}



.flex1 {
  display: flex;
}
.item1 {
  font-size: 4em;
  padding: 1em;
  margin: 5px;
  text-align:center;
}
.item1:nth-child(1) {
  background-color: #12c0dd;
  flex: 0 1 300px; /*сначала grow, shrink, basis- по умолчанию 0 1 auto*/
  /*если хотим первый блок на всю ширину, то grow ставим 1*/
}
.item1:nth-child(2) {
  background-color: #ccc;
  flex: 0 1 300px;
}


.flex2,
.flex3,
.flex4 {
  display: flex;
  width: 880px;
}
.item2 {
  background-color: #12c0dd;
  font-size: 2em;
  padding: 1em;
  margin: 5px;
  text-align:center;
  flex-basis: 100px;
}
.item2:nth-child(1) {
	flex-basis: 200px;
}
.ite {
	flex-basis: 400px;
}


.item3 {
  background-color: #12c0dd;
  font-size: 2em;
  padding: 1em;
  margin: 5px;
  text-align:center;
}

.it {
	flex-grow: 1;
}


.item4 {
  background-color: #12c0dd;
  font-size: 2em;
  padding: 1em;
  margin: 5px;
  text-align:center;
  flex-basis: 36%;
}

.item4:nth-child(3) {
	flex-shrink: 0;
}











































