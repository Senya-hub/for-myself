.flex {
  display: flex;
}
.item {
  background-color: #12c0dd;
  font-size: 2em;
  padding: 1em;
  margin: 5px;
  text-align:center;
  /*flex-basis: 300px; ширина всех дочерних блоков с данным классом.*/
  /*flex-basis: 20%; можно задавать в процентах, это идельно для адаптивности сайта*/
  /*flex-basis: content; занимает именно ту ширину, которую занимает контент*/
   /*flex-grow: 1;автоматически происходит подгон всех элементров, 1 говорит что бы все поместились во всю ширину экрана. По умолчанию значение 0.*/
   /*Противоположность grow, по умолчанию 1, */
}
.item:nth-child(3) { /* можно сделать дополнительный класс*/
	flex-basis: 30%;
}
.item:nth-child(4) {
	flex-grow: 1;/*произошел подгон только 4 элемента на всю свободную ширину*/
}
.item:nth-child(3) {
	flex-shrink: 0;/*упирается на сжатие по сравнению с остальными, уменьшается в соотвествие с коэффициэнтом, расчет идет из пропорции который вычисляется математически. По умолчанию 1*/
}



.flex1 {
  display: flex;
}
.item1 {
  font-size: 4em;
  padding: 1em;
  margin: 5px;
  text-align:center;
}
.item1:nth-child(1) {
  background-color: #12c0dd;
  flex: 0 1 300px; /*сначала grow, shrink, basis- по умолчанию 0 1 auto*/
  /*если хотим первый блок на всю ширину, то grow ставим 1*/
}
.item1:nth-child(2) {
  background-color: #ccc;
  flex: 0 1 300px;
}


.flex2,
.flex3,
.flex4 {
  display: flex;
  max-width: 880px;
}


.item2 {
  background-color: #12c0dd;
  font-size: 2em;
  padding: 1em;
  margin: 5px;
  text-align:center;
  flex-basis: 100px;
}
.item2:nth-child(1) {
	flex-basis: 200px;
}
.ite {
	flex-basis: 400px;
}


.item3 {
  background-color: #12c0dd;
  font-size: 2em;
  padding: 1em;
  margin: 5px;
  text-align:center;
}
.it {
	flex-grow: 1;
}


.item4 {
  background-color: #12c0dd;
  font-size: 2em;
  padding: 1em;
  margin: 5px;
  text-align:center;
  flex-basis: 36%;
}
.item4:nth-child(3) {
	flex-shrink: 0;
}


.flex5 {
  display: flex;
  flex-direction: column-reverse;
  max-width: 140px
}
.item5 {
  background-color: #12c0dd;
  font-size: 3em;
  padding: 0.5em;
  margin: 5px;
  text-align:center;
  
}


* {
  margin: 0;
  padding: 0;
}
body, html {
  height: 100vh;
}
.flex6 {
  display: flex;
  justify-content: flex-end; /* по умолчанию flex-start, часто используется space-between(around) или center, при baseline выравнивается по контенту */
}
.item6 {
  background-color: #12c0dd;
  font-size: 1.5em;
  padding: 0.5em;
  margin: 5px;
  text-align:center;
}
.flex7 {
  display: flex;
  justify-content: space-around;
  align-items: flex-start; /*высота всех элементов сбрасывается и прижимает к верху(по умолчанию срейч), при end будут выравниваться по нижнему краю*/
  
}
.item7 {
  background-color: #12c0dd;
  font-size: 1.5em;
  padding: 0.5em;
  margin: 5px;
  text-align:center;
}
.active {
  padding: 3em .5em 5em .5em;
}
.active-2 {
  padding: 3em .5em 1em .5em;
}
.flex8 {
  display: flex;
  height: 100vh;
  flex-wrap: wrap;/* если уберем то все ячейки постараются разместится в одну строку*/
  align-items: flex-start;
  height: 100%;
  align-content: space-around;/*по вертикали, есть flex-end, flex-start, space-between(только если сделаем ширину flex-basis 30%*/
}
.item8 {
  background-color: #12c0dd;
  font-size: 1.5em;
  padding: 0.5em;
  margin: 5px;
  text-align:center;
  flex-basis: 40%;
}

.flex9 {
  display: flex;
  flex-wrap: wrap;/* по умолчанию nowrap, если уберем то все ячейки постараются разместится в одну строку*/
}
.item9 {
  background-color: #12c0dd;
  font-size: 1.5em;
  padding: 0.5em;
  margin: 5px;
  text-align:center;
  flex-basis: 25%;
}
.active9 {
	order: -1; /* встает в начало ряда, по умолчанию 0, если поставим 1 то он встанет в конец ряда ведь по умолчанию все 0*/
}






































